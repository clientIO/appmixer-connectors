[
    { "op": "remove", "jsonpath": "$..parameters[?(@.name==\"clientId\" && @.in == \"header\")]" },
    { "op": "add", "path": "/info/x-connector-icon", "value": "https://www.connectwise.com/globalassets/media/archive/brand-guidelines-2021/2021-icons/color/CW-icon-Blue.png" },
    { "op": "add", "path": "/info/x-connector-service", "value": "connectwise" },
    { "op": "add", "path": "/info/x-connector-module", "value": "core" },
    { "op": "add", "path": "/x-connector-connection", "value": {
        "auth": {
            "environment": { "type": "select", "name": "Environment", "options": [{ "content": "Australia", "value": "au" }, { "content": "Europe", "value": "eu" }, { "content": "North America", "value": "na" }, { "content": "Staging", "value": "staging" }] },
            "clientId": { "type": "text", "name": "Client ID", "tooltip": "Client Id is used to authentication all requests using the ClientId HTTP header." },
            "companyId": { "type": "text", "name": "Company ID" },
            "publicKey": { "type": "text", "name": "Public Key" },
            "privateKey": { "type": "text", "name": "Private Key" }
        },
        "accountNameFromProfileInfo": "companyId",
        "httpRequestTransform": "req.headers.Authorization = `Basic ${btoa(context.auth.companyId + '+' + context.auth.publicKey + ':' + context.auth.privateKey)}`; req.headers.ClientId = context.auth.clientId;",
        "baseUrlTransform": "(context.auth.environment === 'staging') ? 'https://api-staging.connectwisedev.com/v4_6_release/apis/3.0/' : `https://api-${context.auth.environment}.myconnectwise.net/v4_6_release/apis/3.0/`",
        "validate": "function(context) { const url = (context.environment === 'staging') ? 'https://api-staging.connectwisedev.com/v4_6_release/apis/3.0/system/info' : `https://api-${context.environment}.myconnectwise.net/v4_6_release/apis/3.0/system/info`; const headers = {}; headers.Authorization = `Basic ${btoa(context.companyId + '+' + context.publicKey + ':' + context.privateKey)}`; headers.ClientId = context.clientId; return context.httpRequest.get(url, { headers }); }"
    }},
    { "op": "add", "path": "/paths/~1service~1tickets/post/requestBody/content/application~1json/schema/required/-", "value": "company.id" },
    { "op": "add", "path": "/paths/~1company~1companies/post/requestBody/content/application~1json/schema/required/-", "value": "site.name" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsSearch')]", "path": "x-connector-label", "value": "FindServiceTickets" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsSearch')]", "path": "x-connector-description", "value": "Search service tickets." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsSearch')].parameters[?(@.name == 'conditions')]", "path": "description", "value": "Examples: summary contains 'my ticket', id=27, sla/id in (37, 45, 52), respondMinutes > 60" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyContacts')]", "path": "x-connector-label", "value": "FindContacts" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyContacts')]", "path": "x-connector-description", "value": "Search company contacts." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyContacts')].parameters[?(@.name == 'conditions')]", "path": "description", "value": "Examples: companyLocation/name contains 'Tampa', lastName='Doe', company/id in (37, 45, 52), title contains 'MBA', portalSecurityLevel > 3" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyContacts')]", "path": "x-connector-label", "value": "CreateContact" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyContacts')]", "path": "x-connector-description", "value": "Create a new company contact." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyContacts')].responses['201'].content['application/vnd.connectwise.com+json; version=2022.1'].schema.properties", "path": "id", "value": { "type": "integer"} },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteCompanyContactsById')]", "path": "x-connector-label", "value": "DeleteContact" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteCompanyContactsById')]", "path": "x-connector-description", "value": "Delete an existing company contact." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTickets')]", "path": "x-connector-label", "value": "CreateServiceTicket" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTickets')]", "path": "x-connector-description", "value": "Create a new service ticket." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyCompanies')]", "path": "x-connector-label", "value": "CreateCompany" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyCompanies')]", "path": "x-connector-description", "value": "Create a new company." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteCompanyCompaniesById')]", "path": "x-connector-label", "value": "DeleteCompany" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteCompanyCompaniesById')]", "path": "x-connector-description", "value": "Delete an existing company." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'putServiceTicketsById')]", "path": "x-connector-label", "value": "UpdateServiceTicket" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'putServiceTicketsById')]", "path": "x-connector-description", "value": "Update an existing service ticket. Note that this component is designed to completely replace the existing ticket. Any field that has not been specified will be overridden with the system defaults or set to Null." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsByParentIdNotes')]", "path": "x-connector-label", "value": "CreateServiceTicketNote" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsByParentIdNotes')]", "path": "x-connector-description", "value": "Create a service ticket note." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyCompanies')]", "path": "x-connector-label", "value": "FindCompanies" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyCompanies')].parameters[?(@.name == 'conditions')]", "path": "description", "value": "Examples: name contains 'mycompany', id=27, parentCompany/id in (37, 45, 52), numberOfEmployees > 500" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyCompanies')]", "path": "x-connector-description", "value": "Search companies." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteServiceTicketsById')]", "path": "x-connector-label", "value": "DeleteServiceTicket" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'deleteServiceTicketsById')]", "path": "x-connector-description", "value": "Delete a service ticket." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getServiceBoards')]", "path": "x-connector-label", "value": "FindServiceBoards" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getServiceBoards')]", "path": "x-connector-description", "value": "Search service boards." },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsSearch')]", "path": "x-connector-pagination", "value": {
        "type": "link-header",
        "parameters": {
            "page": "page",
            "limit": "pageSize",
            "cursor": "pageId"
        }
    } },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyCompanies')]", "path": "x-connector-pagination", "value": {
        "type": "link-header",
        "parameters": {
            "page": "page",
            "limit": "pageSize",
            "cursor": "pageId"
        }
    } },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getCompanyContacts')]", "path": "x-connector-pagination", "value": {
        "type": "link-header",
        "parameters": {
            "page": "page",
            "limit": "pageSize",
            "cursor": "pageId"
        }
    } },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'getServiceBoards')]", "path": "x-connector-pagination", "value": {
        "type": "link-header",
        "parameters": {
            "page": "page",
            "limit": "pageSize",
            "cursor": "pageId"
        }
    } },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTickets')].requestBody.content['application/json'].schema.properties.board.properties.id", "path": "x-connector-source", "value": {
        "operationId": "getServiceBoards",
        "transform": "result[].{value: id, label: name}"
    } },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTickets')].requestBody.content['application/json'].schema.properties.id" },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyCompanies')].requestBody.content['application/json'].schema.properties.id" },
    { "op": "add", "jsonpath": "$.paths.*[?(@.operationId == 'putServiceTickets')].requestBody.content['application/json'].schema.properties.board.properties.id", "path": "x-connector-source", "value": {
        "operationId": "getServiceBoards",
        "transform": "result[].{value: id, label: name}"
    } },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsByParentIdNotes')].requestBody.content['application/json'].schema.properties.id" },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId == 'postServiceTicketsByParentIdNotes')].requestBody.content['application/json'].schema.properties.ticketId" },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId == 'postCompanyContacts')].requestBody.content['application/json'].schema.properties.id" },
    { "op": "add", "path": "/paths/~1company~1contacts/x-connector-webhook-create", "value": {
        "tags": [
            "Contacts"
        ],
        "x-connector-type": "trigger",
        "x-connector-webhook": {
            "type": "subscription",
            "subscribeRequestUrl": "{$baseUrl}/system/callbacks",
            "subscribeRequestMethod": "POST",
            "subscribeRequestBody": { "url": "{$webhookUrl}", "objectId": "{$parameters.objectId}", "type": "Contact", "level": "{$parameters.level}" },
            "unsubscribeRequestUrl": "{$baseUrl}/system/callbacks/{$response.body#/id}",
            "unsubscribeRequestMethod": "DELETE",
            "unsubscribeRequestBody": null,
            "output": "$request.body",
            "outputCondition": "$boolean(Action='added')",
            "outputTransform": "$eval(Entity)"
        },
        "operationId": "NewContact",
        "description": "Triggers when a new company contact was created.",
        "parameters": [{
            "name": "level",
            "in": "body",
            "description": "When set to owner, all ConnectWise PSA contacts are returned. When set to type, all contacts of the specified type are returned. When set to territory, all contacts of the specified territory are returned. When set to company, all contacts of the specified company are returned. When set to contact, the specified contact is returned.",
            "required": false,
            "schema": {
                "type": "string", "enum": ["Owner", "Type", "Territory", "Company", "Contact"],
                "default": "Owner"
            }
        }, {
            "name": "objectId",
            "in": "body",
            "description": "The ObjectId should be the Id of whatever record you are subscribing to. This should be set to 1 when using a level of Owner.",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
        }],
        "responses": {
            "201": {
                "description": "New Contact Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                }
            }
        }
    } },
    { "op": "add", "path": "/paths/~1service~1tickets/x-connector-webhook-create", "value": {
        "tags": [
            "Tickets"
        ],
        "x-connector-type": "trigger",
        "x-connector-webhook": {
            "type": "subscription",
            "subscribeRequestUrl": "{$baseUrl}/system/callbacks",
            "subscribeRequestMethod": "POST",
            "subscribeRequestBody": { "url": "{$webhookUrl}", "objectId": "{$parameters.objectId}", "type": "Ticket", "level": "{$parameters.level}" },
            "unsubscribeRequestUrl": "{$baseUrl}/system/callbacks/{$response.body#/id}",
            "unsubscribeRequestMethod": "DELETE",
            "unsubscribeRequestBody": null,
            "output": "$request.body",
            "outputCondition": "$boolean(Action='added')",
            "outputTransform": "$eval(Entity)"
        },
        "operationId": "NewServiceTicket",
        "description": "Triggers when a new service ticket was created.",
        "parameters": [{
            "name": "level",
            "in": "body",
            "description": "When set to owner, all ConnectWise PSA tickets are returned. When set to board, all tickets of the specified board are returned. When set to project, all tickets of the specified project are returned. When set to phase, all tickets of the specified project phase are returned. When set to status, all tickets of the specified status are returned. When set to ticket, the specified ticket is returned.",
            "required": false,
            "schema": {
                "type": "string", "enum": ["Owner", "Board", "Project", "Phase", "Status", "Ticket", "IntegratorTag"],
                "default": "Owner"
            }
        }, {
            "name": "objectId",
            "in": "body",
            "description": "The ObjectId should be the Id of whatever record you are subscribing to. This should be set to 1 when using a level of Owner.",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
        }],
        "responses": {
            "201": {
                "description": "New Service Ticket Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Ticket"
                        }
                    }
                }
            }
        }
    } },
    { "op": "add", "path": "/paths/~1project~1projects/x-connector-webhook-create", "value": {
        "tags": [
            "Tickets"
        ],
        "x-connector-type": "trigger",
        "x-connector-webhook": {
            "type": "subscription",
            "subscribeRequestUrl": "{$baseUrl}/system/callbacks",
            "subscribeRequestMethod": "POST",
            "subscribeRequestBody": { "url": "{$webhookUrl}", "objectId": "{$parameters.objectId}", "type": "Project", "level": "{$parameters.level}" },
            "unsubscribeRequestUrl": "{$baseUrl}/system/callbacks/{$response.body#/id}",
            "unsubscribeRequestMethod": "DELETE",
            "unsubscribeRequestBody": null,
            "output": "$request.body",
            "outputCondition": "$boolean(Action='added')",
            "outputTransform": "$eval(Entity)"
        },
        "operationId": "NewProject",
        "description": "Triggers when a new project was created.",
        "parameters": [{
            "name": "level",
            "in": "body",
            "description": "When set to owner, all ConnectWise PSA projects are returned. When set to board, all projects of the specified board are returned. When set to project, the specified project is returned.",
            "required": false,
            "schema": {
                "type": "string", "enum": ["Owner", "Status", "Board", "Project"],
                "default": "Owner"
            }
        }, {
            "name": "objectId",
            "in": "body",
            "description": "The ObjectId should be the Id of whatever record you are subscribing to. This should be set to 1 when using a level of Owner.",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
        }],
        "responses": {
            "201": {
                "description": "New Project Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                }
            }
        }
    } },
    { "op": "remove", "jsonpath": "$.paths.*[?(@.operationId != 'postServiceTickets' && @.operationId != 'getCompanyCompanies' && @.operationId != 'postServiceTicketsSearch' && @.operationId != 'getServiceBoards' && @.operationId != 'deleteServiceTicketsById' && @.operationId != 'putServiceTicketsById' && @.operationId != 'postServiceTicketsByParentIdNotes' && @.operationId != 'postCompanyCompanies' && @.operationId != 'deleteCompanyCompaniesById' && @.operationId != 'getCompanyContacts' && @.operationId != 'postCompanyContacts' && @.operationId != 'deleteCompanyContactsById')]" }
]

